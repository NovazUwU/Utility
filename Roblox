getgenv().Players = cloneref(game:GetService("Players"))
getgenv().ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage"))
getgenv().RunService = cloneref(game:GetService("RunService"))
getgenv().Player = cloneref(Players.LocalPlayer)
getgenv().Character = cloneref(Player.Character or Player.CharacterAdded:Wait())
getgenv().HumanoidRootPart = cloneref(Character:WaitForChild("HumanoidRootPart"))
getgenv().Callbacks = {
    ["PlayerAdded"] = {},
    ["PlayerRemoving"] = {}
}
getgenv().PlayerAdded = Callbacks["PlayerAdded"]
getgenv().PlayerRemoving = Callbacks["PlayerRemoving"]
getgenv().HUI = gethui()
getgenv().Colors = {
    ["Black"] = Color3.fromRGB(0, 0, 0),
    ["Red"] = Color3.fromRGB(255, 0, 0),
    ["Green"] = Color3.fromRGB(0, 255, 0),
    ["Blue"] = Color3.fromRGB(0, 0, 255),
}
getgenv().AllPlayers = {}

Player.CharacterAdded:Connect(function(Char)
    Character = cloneref(Char) 
    HumanoidRootPart = cloneref(Character:WaitForChild("HumanoidRootPart"))
end)

getgenv().WorldToViewportPoint = function(...)
    return workspace.CurrentCamera:WorldToViewportPoint(...)
end 

getgenv().GetMouse = function()
    local lMouse = cloneref(Player:GetMouse())
    return Vector2.new(lMouse.X, lMouse.Y)
end 

getgenv().GetClosestPlayerToMouse = function()
    local Response = {nil, 99e99}
    for i,v in next, AllPlayers do 
        if compareinstances(v, Player) then continue end 
        v = v.Character 
        if not v then continue end 
        local vHead = v:FindFirstChild("Head")
        local vHumanoid = v:FindFirstChild("Humanoid")
        if (not vHead) or (not vHumanoid) or (not (vHumanoid.Health > 0)) then continue end 
        local Position, Visible = WorldToViewportPoint(vHead.Position)
        if not Visible then 
            local vHumanoidRootPart = v:FindFirstChild("HumanoidRootPart")
            if not vHumanoidRootPart then continue end 
            local Position1, Visible1 = WorldToViewportPoint(vHumanoidRootPart.Position)
            if not Visible1 then continue end 
            Visible = Visible1 
            Position = Position1 
            vHead = vHumanoidRootPart 
        end 
        Position = Vector2.new(Position.X, Position.Y)
        local MousePosition = GetMouse()
        local Magnitude = (MousePosition - Position).Magnitude 
        if Magnitude < Response[2] then 
            Response[2] = Magnitude 
            Response[1] = vHead
        end 
    end 
    return Response[1]
end 

getgenv().GetClosestPlayer = function()
    local Response = {nil, 99e99}
    for i,v in next, AllPlayers do 
        if compareinstances(v, Player) then continue end 
        v = v.Character 
        if not v then continue end 
        local vHumanoidRootPart = v:FindFirstChild("HumanoidRootPart")
        local vHumanoid = v:FindFirstChild("Humanoid")
        if (not vHumanoidRootPart) or (not vHumanoid) or (not (vHumanoid.Health > 0)) then continue end 
        local Magnitude = (vHumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude 
        if Magnitude < Response[2] then 
            Response[2] = Magnitude 
            Response[1] = vHumanoidRootPart
        end 
    end 
    return Response[1]
end 

getgenv().Highlights = {}
getgenv().Highlighted = {}

for i = 1, 32 do -- max highlights because roblox is autistic
    local Highlight = Instance.new("Highlight")
    Highlight.Parent = HUI 
    Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    Highlight.Enabled = true 
    Highlight.FillColor = Colors["Black"]
    Highlight.FillTransparency = 0
    Highlight.OutlineColor = Colors["Red"]
    Highlight.OutlineTransparency = 0

    Highlights[#Highlights + 1] = Highlight 
end 

local ESPToggle = false 
getgenv().HighlightESP = function()
    ESPToggle = not ESPToggle
end 

getgenv().AssignHighlight = function(Model)
    if Highlighted[Model.Name] then return end 
    for i,v in next, Highlights do 
        if not v.Adornee then 
            Highlighted[Model.Name] = v
            v.Adornee = Model 
            break 
        end 
    end 
end 

getgenv().RemoveHighlight = function(Model)
    local Found = Highlighted[Model.Name]
    if not Found then return end 
    Found.Adornee = nil 
    Highlighted[Model.Name] = nil 
end 

for i,v in next, Players:GetPlayers() do 
    table.insert(AllPlayers, v)
end

Players.PlayerAdded:Connect(function(Player)
    table.insert(AllPlayers, Player)
end)

Players.PlayerRemoving:Connect(function(Player)
    for i,v in next, AllPlayers do 
        if v == Player then 
            RemoveHighlight(Player)
            table.remove(AllPlayers, i)
        end 
    end 
end)

RunService.RenderStepped:Connect(function()
    if ESPToggle then 
        for i,v in next, AllPlayers do 
            if compareinstances(v, Player) then continue end 
            v = v.Character 
            if not v then continue end 
            local vHead = v:FindFirstChild("Head")
            local vHumanoid = v:FindFirstChild("Humanoid")
            if (not vHead) or (not vHumanoid) or (not (vHumanoid.Health > 0)) then continue end 
            local Position, Visible = WorldToViewportPoint(vHead.Position)
            if Visible then 
                AssignHighlight(v)
            else 
                RemoveHighlight(v)
            end 
        end 
    end 
end) 
